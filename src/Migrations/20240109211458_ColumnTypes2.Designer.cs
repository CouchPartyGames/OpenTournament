// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenTournament.Data;

#nullable disable

namespace OpenTournament.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240109211458_ColumnTypes2")]
    partial class ColumnTypes2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("OpenTournament.Common.Models.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("LocalMatchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("OpenTournament.Common.Models.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f924898c-249c-4ff3-b483-5dfe2819a66d"),
                            Name = "Bye"
                        });
                });

            modelBuilder.Entity("OpenTournament.Common.Models.Registration", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("TEXT");

                    b.HasKey("TournamentId", "ParticipantId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("OpenTournament.Common.Models.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("DrawSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EliminationMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistrationMode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
